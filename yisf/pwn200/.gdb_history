c
ni
b *0x8048F08
c
b *0x8048F08
c
step
ropgadget
ppr
help
peda
c
bt
x/x 0x804b008
x/wx 0x804b008
x/wx 0x804b008
c
bt
c
c
bt
c
x/x $ecx
c
c
c
c
find 0x0117d029
c
c
c
c
bt
c
c
x/x 0x8048F3C
b *0x8048F3F
c
c
b *0x8048F3F
c
b *0x8048F3F
c
c
c
c
x/x $ebp-0x8
c
c
c
find 0x012cc021
x/x 0x804b014
c
c
c
c
c
c
c
c
c
c
print system
print fllush
print flush
print fflush
print read
c
x/x 0xf778d87c
c
c
bt
printf
print printf
print system
c
print printf
print system
x/x 0xffb718e8
x/x 0xffb718e8-0x8
c
c
c
c
c
c
bt
x/x 0x804B00C
x/x 0x804B00C-0x8
c
c
c
c
x/x $esp+0x10
c
x/x $esp+0x10
checksec
x/x $esp+gdb-peda$ c
Continuing.
Program received signal SIGSEGV, Segmentation fault.
[----------------------------------registers-----------------------------------]
EAX: 0xf76c45a0 --> 0xfbad2088 
EBX: 0x0 
ECX: 0x804b008 ('B' <repeats 16 times>, "\026\205\004\bp")
EDX: 0x110 
ESI: 0xf76c4000 --> 0x1b1db0 
EDI: 0xff954680 --> 0xff9546a0 --> 0x1 
EBP: 0xff954178 --> 0xff954688 --> 0x0 
ESP: 0xff95411c --> 0x8048cf6 (add    esp,0x10)
EIP: 0x42424242 ('BBBB')
EFLAGS: 0x10296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
x/x $esp+0x2B4

x/s 0xff9543e4
x/x $esp+0x2B4
x/xw $esp+0x2B4
x/x 0xf76efec9
x/s 0xf76efec9
x/x $esp+0x10
x/x $esp+0x0c
x/xw $esp+0x0c
x/x $ebp-0x8
c
bt
c
c
c
x/x dx
x/x 
x/x $eax
c
x/x $eax
c
c
c
c
c
bt
b *0x8048F08
c
c
b *0x8048CE0
c
x/x 0x92db008
p/x 0x92db014-0x92db008
c
x/x $ecx
c
x/x $ecx
c
x/x $ecx
c
find 0x0162bff1
c
bt
c
find 0x0159ffd1
c
bt
x/x 0x804b038
x/x 0x804b038-0x4
x/x 0x804b038-0x4
c
bty
bt
r
c
c
c
c
bt
c
c
c
c
c
x/x 0xfbad2887
c
c
c
x/x 0xf7714da7
c
c
c
bt
c
c
c
c
c
bt
c
c
c
x/x 0xf773fd17
x/x 0xf773fda7
vmmap
p/x 0xf773fda7-0xf758d000
c
c
c
c
c
c
c
c
x/x $ecx
c
x/x $evx
x/x $ecx
c
c
x/x $ecx
c
c
c
c
c
x/x 0xf76f1da7
vmmap
p/x 0xf76f1da7-0xf753f000
c
c
c
c
c
c
c
c
bt
c
c
c
c
c
c
x/x 0xf773ada7
vmmap
p/x 0xf773ada7-0xf7588000
c
bt
c
c
x/x $rsi
b *0x401F3C
c
c
c
c
vmmap
ni
x/x 0xad1c48
c
checksec
c
c
